library("Cairo")
library("cmdstanr")
library("data.table")
library("doParallel")
library("ggdist")
library("ggplot2")
library("ggpubr")
library("ggrepel")
library("kableExtra")
library("knitr")
library("parallel")
library("rnaturalearth")
library("rnaturalearthdata")
library("rstan")
library("sf")
library("zoolog")

####ARCHAEOLOGICAL DATA####
####1. Import the archaeological data####
#list of elements (names from OpenContext standards)
modeled_elements <- c("scapula", "humerus", "radius bone", "fused metacarpal bones 3 and 4", "femur", "tibia", "talus", "calcaneus", "fused metatarsal bones 3 and 4", "proximal phalanx")

#Barcin Hoyuk Cattle####
barcin <- fread("./Data/Barcin Hoyuk Zooarchaeology Data (OpenContext - DOI 10.678-M7MS3QN7).csv")
#Have to include element names that are not in the modeled_elements categories because they're collapsed categories of multiple metacarpal/metatarsal identifications
barcin_data <- barcin[`Has Biological Taxonomy [Label]` %in% c("Bos taurus Linnaeus, 1758", "Bos primigenius") & `Has anatomical identification [Label]` %in% c(modeled_elements, "fused metacarpal bones 3 and 4; metacarpal bone of digit 3; metacarpal bone of digit 4; metacarpal bone of digit 5", "metatarsal bone of digit 5; metatarsal bone of digit 2; fused metatarsal bones 3 and 4", "middle phalanx"), .(ID = paste("Barcin", `Label`, sep = " "), Site = "Barcin", Taxon = `Has Biological Taxonomy [Label]`, Anatomy = `Has anatomical identification [Label]`, `Proximal Fusion` = `Has fusion character [Proximal Label]`, `Distal Fusion` = `Has fusion character [Distal Label]`, GLP = `Scap_glp`, Bd = ifelse(`Has anatomical identification [Label]` %in% "talus", Tal_bd, Bd), BT = NA, Bp = Bp, BFp = Bfp, DC = NA, GB = Gb)][!is.na(GLP) | !is.na(Bd) | !is.na(BT) | !is.na(Bp) | !is.na(BFp) | !is.na(DC) | !is.na(GB)]

#Troubleshooting
barcin_data[ID %in% c("Barcin Bone 448", "Barcin Bone 358"), c("Bp") := NA] #anomalously small Bp measurements (17.2, 18.1); error in taxon coding?

#Create key between the "Anatomy" label from the original dataset and the "Element" label that will be used in the model
barcin_element_key <- data.table(`Anatomy Label` = c("scapula", "humerus", "radius bone", "fused metacarpal bones 3 and 4; metacarpal bone of digit 3; metacarpal bone of digit 4; metacarpal bone of digit 5", "femur", "tibia", "talus", "calcaneus", "metatarsal bone of digit 5; metatarsal bone of digit 2; fused metatarsal bones 3 and 4", "proximal phalanx", "middle phalanx"),
                                 `Element Label` = c("Sca", "Hum", "Rad", "Mtc", "Fem", "Tib", "Ast", "Cal", "Mtt", "PH1", "PH2"))

#Ilipinar Cattle####
ilipinar <- fread("./Data/Ilipinar Zooarchaeology Main Zooarchaeological Dataset (OpenContext - DOI 10.6078-M72R3PM2).csv")
ilipinar_data <- ilipinar[`Has Biological Taxonomy [Label]` %in% c("Bos taurus Linnaeus, 1758", "Bos", "Bos primigenius") & `Period` %in% c("X", "IX", "IX/VIII", "VIII", "VII", "VI", "VI/VA", "VA", "VB") & `Has anatomical identification [Label]` %in% c(modeled_elements, "middle phalanx"), .(ID = paste("Ilipinar", `Label`, sep = " "), Site = ifelse(`Period` %in% c("X", "IX", "IX/VIII", "VIII"), "Ilipinar 1 (Late Neolithic/Transitional)", ifelse(`Period` %in% c("VII", "VI", "VI/VA", "VA", "VB"), "Ilipinar 2 (Early Chalcolithic)", NA)), Taxon = `Has Biological Taxonomy [Label]`, Anatomy = `Has anatomical identification [Label]`, `Proximal Fusion` = `Has fusion character [Proximal Label]`, `Distal Fusion` = `Has fusion character [Distal Label]`, GLP = GLP, Bd = ifelse(`Has anatomical identification [Label]` %in% c("fused metacarpal bones 3 and 4", "fused metatarsal bones 3 and 4"), `Bd (breadth of distal end- epi)`, `Bd`), BT = BT, Bp = Bp, BFp = BFp, DC = DC, GB = GB, Taxon = `Has Biological Taxonomy [Label]`)][!is.na(GLP) | !is.na(Bd) | !is.na(BT) | !is.na(Bp) | !is.na(BFp) | !is.na(DC) | !is.na(GB)]

#Troubleshooting
ilipinar_data[ID %in% "Ilipinar Bone 8029", c("Bp", "Bd") := .(NA, 68.8)] #originally listed as Bp
ilipinar_data[ID %in% "Ilipinar Bone 2706", c("Bd") := .(61.1)] #appears to be switched with SD (44.7)
ilipinar_data[ID %in% "Ilipinar Bone 1576", c("Bd") := .(45)] #appears to be switched with GLm (64.7)
ilipinar_data[ID %in% "Ilipinar Bone 2073", c("Bd") := NA] #appears to be a copy of GLm (63.2), unclear what original measurement was
ilipinar_data[ID %in% c("Ilipinar Bone 6592", "Ilipinar Bone 31126"), c("Bp") := NA] #Bp appears to be a copy of GLpe (58.6, 65.7)
ilipinar_data[ID %in% c("Ilipinar Bone 1813"), c("Bd") := NA] #Bd appears anomalously low; possibly typo on the anatomy?
ilipinar_data[ID %in% c("Ilipinar Bone 8680"), c("Bp", "BFp") := .(NA, NA)] #values are anomalously low and distant from one another, unclear if taxon or anatomy are correct (Bp = 55.3, BFp = 36.0)
ilipinar_data[ID %in% "Ilipinar Bone 20694", c("Bp") := 38.1] #switched with GL (66)
ilipinar_data[ID %in% "Ilipinar Bone 20427", c("Bp") := NA] #remove measurement (anomalously low), unclear if typo in measurement or taxon?

#Creating key between the "Anatomy" label from the original dataset and the "Element" label that will be used in the model
ilipinar_element_key <- data.table(`Anatomy Label` = c("scapula", "humerus", "radius bone", "fused metacarpal bones 3 and 4", "femur", "tibia", "talus", "calcaneus", "fused metatarsal bones 3 and 4", "proximal phalanx", "middle phalanx"),
                                   `Element Label` = c("Sca", "Hum", "Rad", "Mtc", "Fem", "Tib", "Ast", "Cal", "Mtt", "PH1", "PH2"))

#Mentese Cattle####
mentese <- fread("./Data/Neolithic Mentese Faunal Data Table (OpenContext - DOI 10.6078-M7MG7MD8).csv")
mentese_data <- mentese[`Has Biological Taxonomy [Label]` %in% "Bos" & `Has anatomical identification [Label]` %in% c(modeled_elements, "middle phalanx"), .(ID = paste("Mentese", `Label`, sep = " "), Site = "Mentese", Taxon = `Has Biological Taxonomy [Label]`, Anatomy = `Has anatomical identification [Label]`, `Proximal Fusion` = `Has fusion character [Proximal Label]`, `Distal Fusion` = `Has fusion character [Distal Label]`, GLP = GLP, Bd = Bd, BT = BT, Bp = Bp, BFp = BFp, DC = NA, GB = GB)][!is.na(GLP) | !is.na(Bd) | !is.na(BT) | !is.na(Bp) | !is.na(BFp) | !is.na(DC) | !is.na(GB)]

#Troubleshooting
mentese_data[ID %in% "Mentese Bone 2403", Bp := 10.8] #Bp measurement is way too large relative to the Bd value (10.9); shifting to 10.8 seems more reasonable
mentese_data[Anatomy %in% "calcaneus", `Proximal Fusion` := ifelse(`Distal Fusion` %in% "Distal epiphysis unfused", "Proximal epiphysis unfused", ifelse(`Distal Fusion` %in% "Distal epiphysis fusing", "Proximal epiphysis fusing", ifelse(`Distal Fusion` %in% "Distal epiphysis fused", "Proximal epiphysis fused", ifelse(`Distal Fusion` %in% "", "", NA))))] #calcaneus fusion is listed as `Distal Fusion` but is `Proximal Fusion` in other sites/codes

#Creating key between the "Anatomy" label from the original dataset and the "Element" label that will be used in the model
mentese_element_key <- data.table(`Anatomy Label` = c("scapula", "humerus", "radius bone", "fused metacarpal bones 3 and 4", "femur", "tibia", "talus", "calcaneus", "fused metatarsal bones 3 and 4", "proximal phalanx", "middle phalanx"),
                                  `Element Label` = c("Sca", "Hum", "Rad", "Mtc", "Fem", "Tib", "Ast", "Cal", "Mtt", "PH1", "PH2"))

#Pinarbasi Sheep####
pinarbasi <- fread("./Data/Pinarbasi EOL Computational Data Challenge Revised Zooarchaeology Dataset (OpenContext - DOI 10.607-8M7X34VD1).csv")
#Have to include element names that are not in the modeled_elements categories because they're collapsed categories of multiple metacarpal/metatarsal identifications
pinarbasi_data <- pinarbasi[`Has Biological Taxonomy [Label]` %in% "Ovis" & `Context (3)` %in% "Site B" & `Has anatomical identification [Label]` %in% c(modeled_elements, "fused metacarpal bones 3 and 4; metacarpal bone of digit 1; metacarpal bone of digit 4; metacarpal bone of digit 5; metacarpal bone of digit 2; metacarpal bone; metacarpal bone of digit 3", "metatarsal bone of digit 2; metatarsal bone of digit 4; fused metatarsal bones 3 and 4; metatarsal bone of digit 3"), .(ID = paste("Pinarbasi B", `Label`, sep = " "), Site = "Pinarbasi B", Anatomy = `Has anatomical identification [Label]`, `Proximal Fusion` = ifelse(!is.na(`GB (unfused)`) | !is.na(`Bp (unfused)`), "Proximal epiphysis unfused", `Has fusion character [Proximal Label]`), `Distal Fusion` = ifelse(!is.na(`Bd (unfused)`), "Distal epiphysis unfused", `Has fusion character [Distal Label]`), GLP = NA, Bd = ifelse(!is.na(`Bd (unfused)`), `Bd (unfused)`, Bd), BT = NA, Bp = ifelse(!is.na(`Bp (unfused)`), `Bp (unfused)`, Bp), BFp = BFp, DC = NA, GB = ifelse(!is.na(`GB (unfused)`), `GB (unfused)`, GB))][!is.na(GLP) | !is.na(Bd) | !is.na(BT) | !is.na(Bp) | !is.na(BFp) | !is.na(DC) | !is.na(GB)]

#Creating key between the "Anatomy" label from the original dataset and the "Element" label that will be used in the model
pinarbasi_element_key <- data.table(`Anatomy Label` = c("scapula", "humerus", "radius bone", "fused metacarpal bones 3 and 4; metacarpal bone of digit 1; metacarpal bone of digit 4; metacarpal bone of digit 5; metacarpal bone of digit 2; metacarpal bone; metacarpal bone of digit 3", "femur", "tibia", "talus", "calcaneus", "metatarsal bone of digit 2; metatarsal bone of digit 4; fused metatarsal bones 3 and 4; metatarsal bone of digit 3", "proximal phalanx"),
                                    `Element Label` = c("Sca", "Hum", "Rad", "Mtc", "Fem", "Tib", "Ast", "Cal", "Mtt", "PH1"))


#Reference animal from `zoolog` package
sheep_standard_animal <- data.table(referencesDatabase$`Ovis orientalis`$Uerpmann) #redoing sheep even though it was done in the simulations
bos_standard_animal <- data.table(referencesDatabase$`Bos primigenius`$Degerbol)
#add in the measurement of the Scapula GLP (89.0 mm), Calcaneus GB (46.0 mm); Degerbol 1970: Table 13, Table 18
bos_standard_animal <- rbind(bos_standard_animal, data.table(TAX = rep("Bos primigenius", 2), EL = c("Scapula", "Calcaneus"), Measure = c("GLP", "GB"), Standard = c(89.0, 46)))

####2. Structuring the Datasets####

#Reference Data
#Rename standard animal measurements to match the names in the dataset
sheep_standard_animal[EL %in% "Scapula", c("Element", "Measurement") := .("Sca", paste("Sca", Measure, sep = "_"))]
sheep_standard_animal[EL %in% "Humerus", c("Element", "Measurement") := .("Hum", paste("Hum", Measure, sep = "_"))]
sheep_standard_animal[EL %in% "Radius", c("Element", "Measurement") := .("Rad", paste("Rad", Measure, sep = "_"))]
sheep_standard_animal[EL %in% "Metacarpus", c("Element", "Measurement") := .("Mtc", paste("Mtc", Measure, sep = "_"))]
sheep_standard_animal[EL %in% "Femur", c("Element", "Measurement") := .("Fem", paste("Fem", Measure, sep = "_"))]
sheep_standard_animal[EL %in% "Tibia", c("Element", "Measurement") := .("Tib", paste("Tib", Measure, sep = "_"))]
sheep_standard_animal[EL %in% "Astragalus", c("Element", "Measurement") := .("Ast", paste("Ast", Measure, sep = "_"))]
sheep_standard_animal[EL %in% "Calcaneus", c("Element", "Measurement") := .("Cal", paste("Cal", Measure, sep = "_"))]
sheep_standard_animal[EL %in% "Metatarsus", c("Element", "Measurement") := .("Mtt", paste("Mtt", Measure, sep = "_"))]
sheep_standard_animal[EL %in% "Phalanx 1 ant.", c("Element", "Measurement") := .("PH1", paste("PH1", Measure, sep = "_"))]
#
bos_standard_animal[EL %in% "Scapula", c("Element", "Measurement") := .("Sca", paste("Sca", Measure, sep = "_"))]
bos_standard_animal[EL %in% "Humerus", c("Element", "Measurement") := .("Hum", paste("Hum", Measure, sep = "_"))]
bos_standard_animal[EL %in% "Radius", c("Element", "Measurement") := .("Rad", paste("Rad", Measure, sep = "_"))]
bos_standard_animal[EL %in% "Metacarpus", c("Element", "Measurement") := .("Mtc", paste("Mtc", Measure, sep = "_"))]
bos_standard_animal[EL %in% "Femur", c("Element", "Measurement") := .("Fem", paste("Fem", Measure, sep = "_"))]
bos_standard_animal[EL %in% "Tibia", c("Element", "Measurement") := .("Tib", paste("Tib", Measure, sep = "_"))]
bos_standard_animal[EL %in% "Astragalus", c("Element", "Measurement") := .("Ast", paste("Ast", Measure, sep = "_"))]
bos_standard_animal[EL %in% "Calcaneus", c("Element", "Measurement") := .("Cal", paste("Cal", Measure, sep = "_"))]
bos_standard_animal[EL %in% "Metatarsus", c("Element", "Measurement") := .("Mtt", paste("Mtt", Measure, sep = "_"))]
bos_standard_animal[EL %in% "Phalanx 1 ant.", c("Element", "Measurement") := .("PH1", paste("PH1", Measure, sep = "_"))]
bos_standard_animal[EL %in% "Phalanx 2 ant.", c("Element", "Measurement") := .("PH1", paste("PH2", Measure, sep = "_"))]

#Function to restructure the measurement data into a format for the model
assemblage_restructure <- function(dataset, reference_dataset, element_key, included_measurements = c("Sca_GLP", "Hum_Bd", "Hum_BT", "Rad_Bp", "Rad_BFp", "Rad_Bd", "Mtc_Bp", "Mtc_Bd", "Fem_DC", "Fem_Bd", "Tib_Bp", "Tib_Bd", "Ast_Bd", "Cal_GB", "Mtt_Bp", "Mtt_Bd", "PH1_Bp")) {
  #Element: identify what end of the bone (proximal/distal) is included in the measurements (for element portions).
  #goes through element_key to change anatomical part names to the new labels
  #Note: key may have multiple Anatomy Labels that fit onto the same `Element Label`
  for(i in 1:nrow(element_key)) {
    dataset[Anatomy %in% element_key[i, `Anatomy Label`], Element := element_key[i, `Element Label`]]
    #Separate out proximal and distal element portions based on presence of later-fusing measurements (e.g., radius bone is proximal/distal based on presence of Bd measurement)
    if(element_key[i, `Element Label`] %in% c("Rad", "Mtc", "Fem", "Mtt")) {
      dataset[Anatomy %in% element_key[i, `Anatomy Label`], Element := ifelse(!is.na(Bd), paste(element_key[i, `Element Label`], "dist", sep = "_"), paste(element_key[i, `Element Label`], "prox", sep = "_"))]
    }
    if(element_key[i, `Element Label`] %in% c("Tib")) {
      dataset[Anatomy %in% element_key[i, `Anatomy Label`], Element := ifelse(!is.na(Bp), paste(element_key[i, `Element Label`], "prox", sep = "_"), paste(element_key[i, `Element Label`], "dist", sep = "_"))]
    }
  }
  #Immature: identify whether specimens COULD be immature based on element portion and fusion status, if relevant
  dataset[Element %in% c("Sca", "Ast"), Immature := 1] #does not fuse / subject to post-fusion growth and has no relevant fusion data to exclude immature status
  dataset[Element %in% c("Hum", "Cal", "PH1", "PH2"), Immature := as.numeric(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing") == F)]
  dataset[Element %in% c("Rad_prox", "Rad_dist", "Mtc_prox", "Mtc_dist", "Mtt_prox", "Mtt_dist"), Immature := as.numeric(`Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing") == F)]
  dataset[Element %in% c("Fem_prox", "Fem_dist", "Tib_prox", "Tib_dist"), Immature := as.numeric((`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing") | `Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing")) == F)]
  #transform into long-form data
  dataset_longdata <- melt(dataset, id.vars = c("ID", "Site", "Anatomy", "Element", "Proximal Fusion", "Distal Fusion", "Immature"), measure.vars = c("GLP", "Bd", "BT", "Bp", "BFp", "DC", "GB"), variable.name = "Measure", value.name = "Measurement_value")[!is.na(Measurement_value)]
  #Measurement: combine element and measurement names (for measurement sets)
  #goes through element_key to change anatomical part names to the new labels
  #Note: key may have mlutiple Anatomy Labels that fit onto the same `Element Label`
  for(i in 1:nrow(element_key)) {
    dataset_longdata[Anatomy %in% element_key[i, `Anatomy Label`], Measurement := paste(element_key[i, `Element Label`], Measure, sep = "_")]
  }
  #bring in the reference measurement for each value (joined by measurement) and limiting the assemblage to the measurements that we're interested in modeling
  mixmod_data <- dataset_longdata[reference_dataset[, .(Reference_value = Standard, Measurement)], on = c("Measurement")][!is.na(ID) & Measurement %in% included_measurements]
  #Create numeric labels for measurement sets, element portions, and specimens (for Stan modeling)
  mixmod_data[, Measurement_Set := as.numeric(as.factor(Measurement))]
  mixmod_data[, Element_Portion := as.numeric(as.factor(Element))]
  mixmod_data[, Specimen_No := as.numeric(as.factor(ID))]
  #return new dataset
  mixmod_data
}
#List of included measurements
measurement_list <- c("Sca_GLP", "Hum_Bd", "Hum_BT", "Rad_Bp", "Rad_BFp", "Rad_Bd", "Mtc_Bp", "Mtc_Bd", "Fem_DC", "Fem_Bd", "Tib_Bp", "Tib_Bd", "Ast_Bd", "Cal_GB", "Mtt_Bp", "Mtt_Bd", "PH1_Bp")

#Applying the function
pinarbasi_mixmod_data <- assemblage_restructure(pinarbasi_data, sheep_standard_animal, pinarbasi_element_key, included_measurements = measurement_list)
#
barcin_mixmod_data <- assemblage_restructure(barcin_data, bos_standard_animal, barcin_element_key, included_measurements = c(measurement_list, "PH2_Bp"))
ilipinar_mixmod_data <- assemblage_restructure(ilipinar_data, bos_standard_animal, ilipinar_element_key, included_measurements = c(measurement_list, "PH2_Bp"))
mentese_mixmod_data <- assemblage_restructure(mentese_data, bos_standard_animal, mentese_element_key, included_measurements = c(measurement_list, "PH2_Bp"))

####3. Collecting the demographic data####

#Pinarbasi Sheep#
#Use sheep code and sheep/goat code (being liberal, taking all that aren't conclusively goats)
#This undoubtedly includes some goats, but the biases against unfused specimens (which are much more likely to be considered sheep/goat) is judged to be a bigger issue
#This is a modeling choice, however, so can be changed depending on the context
pinarbasi_demographic_observations <- pinarbasi[`Has Biological Taxonomy [Label]` %in% c("Ovis", "Sheep/goat") & `Context (3)` %in% c("Site B"), .(Site = "Pinarbasi B", N_Unfused = sum(`Has anatomical identification [Label]` %in% c("proximal phalanx", "middle phalanx") & `Has fusion character [Proximal Label]` %in% "Proximal epiphysis unfused"), N_Ageable = sum(`Has anatomical identification [Label]` %in% c("proximal phalanx", "middle phalanx") & `Has fusion character [Proximal Label]` %in% "" == F), N_Female = sum(`Has anatomical identification [Label]` %in% "innominate bone" & `Has physiological sex determination [Label]` %in% "female organism"), N_Sexable = sum(`Has anatomical identification [Label]` %in% "innominate bone" & `Has physiological sex determination [Label]` %in% c("female organism", "male organism")))]

#NW Anatolian Cattle#
barcin_demographic_observations <- barcin[`Has Biological Taxonomy [Label]` %in% c("Bos taurus Linnaeus, 1758", "Bos primigenius"), .(Site = "Barcin Hoyuk", N_Unfused = sum(`Has anatomical identification [Label]` %in% c("proximal phalanx", "middle phalanx") & `Has fusion character [Proximal Label]` %in% "Proximal epiphysis unfused"), N_Ageable = sum(`Has anatomical identification [Label]` %in% c("proximal phalanx", "middle phalanx") & `Has fusion character [Proximal Label]` %in% "" == F), N_Female = sum(`Has anatomical identification [Label]` %in% "innominate bone" & `Has physiological sex determination [Label]` %in% "female organism"), N_Sexable = sum(`Has anatomical identification [Label]` %in% "innominate bone" & `Has physiological sex determination [Label]` %in% c("female organism", "male organism")))]
ilipinar_demographic_observations <- ilipinar[`Has Biological Taxonomy [Label]` %in% c("Bos taurus Linnaeus, 1758", "Bos primigenius", "Bos") & `Period` %in% c("X", "IX", "IX/VIII", "VIII", "VII", "VI", "VI/VA", "VA", "VB"), .(N_Unfused = sum(`Has anatomical identification [Label]` %in% c("proximal phalanx", "middle phalanx") & `Has fusion character [Proximal Label]` %in% "Proximal epiphysis unfused"), N_Ageable = sum(`Has anatomical identification [Label]` %in% c("proximal phalanx", "middle phalanx") & `Has fusion character [Proximal Label]` %in% "" == F), N_Female = sum(`Has anatomical identification [Label]` %in% "innominate bone" & `Has physiological sex determination [Label]` %in% "female organism"), N_Sexable = sum(`Has anatomical identification [Label]` %in% "innominate bone" & `Has physiological sex determination [Label]` %in% c("female organism", "male organism"))), .(Site = ifelse(`Period` %in% c("X", "IX", "IX/VIII", "VIII"), "Ilipinar 1 (Late Neolithic/Transitional)", ifelse(`Period` %in% c("VII", "VI", "VI/VA", "VA", "VB"), "Ilipinar 2 (Early Chalcolithic)", NA)))][order(Site)]
mentese_demographic_observations <- mentese[`Has Biological Taxonomy [Label]` %in% c("Bos"), .(Site = "Mentese", N_Unfused = sum(`Has anatomical identification [Label]` %in% c("proximal phalanx", "middle phalanx") & `Has fusion character [Proximal Label]` %in% "Proximal epiphysis unfused"), N_Ageable = sum(`Has anatomical identification [Label]` %in% c("proximal phalanx", "middle phalanx") & `Has fusion character [Proximal Label]` %in% "" == F), N_Female = sum(`Has anatomical identification [Label]` %in% "innominate bone" & `Has physiological sex determination [Label]` %in% "female organism"), N_Sexable = sum(`Has anatomical identification [Label]` %in% "innominate bone" & `Has physiological sex determination [Label]` %in% c("female organism", "male organism")))]


####Formatting####
#Single Assemblage analysis: add in "Site_No" field (model expects)
pinarbasi_mixmod_data[, Site_No := 1]

#Multisite analysis: Combine the site-level data together, add Site_No field
nw_anatolian_mixmod_data <- rbind(
  data.table(Site_No = 1, barcin_mixmod_data),
  data.table(Site_No = 2, ilipinar_mixmod_data[Site %in% "Ilipinar 1 (Late Neolithic/Transitional)"]),
  data.table(Site_No = 3, mentese_mixmod_data),
  data.table(Site_No = 4, ilipinar_mixmod_data[Site %in% "Ilipinar 2 (Early Chalcolithic)"])
)
#Re-assign numeric codes for element portions, measurement sets, and individual specimens (to prevent mismatches/overlap)
nw_anatolian_mixmod_data[, Measurement_Set := as.numeric(as.factor(Measurement))]
nw_anatolian_mixmod_data[, Element_Portion := as.numeric(as.factor(Element))]
nw_anatolian_mixmod_data[, Specimen_No := as.numeric(as.factor(ID))]

#Combine the demographic data together, add Site_No field
nw_anatolian_demographic_observations <- rbind(
  data.table(Site_No = 1, barcin_demographic_observations),
  data.table(Site_No = 2, ilipinar_demographic_observations[Site %in% "Ilipinar 1 (Late Neolithic/Transitional)"]),
  data.table(Site_No = 3, mentese_demographic_observations),
  data.table(Site_No = 4, ilipinar_demographic_observations[Site %in% "Ilipinar 2 (Early Chalcolithic)"])
)

#

####Constructing modeled (and full) assemblages from OpenContext data for compositional and fusion analyses####
#gather the different assemblages: measured assemblage, assemblage of modeled elements, full assemblage (including unmodeled elements)

#Pinarbasi Sheep#
pinarbasi_additional_elements <- c("innominate bone", "middle phalanx", "ulna") #additional elements for compositional analysis
pinarbasi_measured_assemblage <- pinarbasi_mixmod_data[, .N, .(ID, Specimen_No, Anatomy, Element, Element_Portion, Immature, `Proximal Fusion`, `Distal Fusion`)]
pinarbasi_modeled_assemblage <- pinarbasi[`Has Biological Taxonomy [Label]` %in% "Ovis" & `Context (3)` %in% "Site B" & `Has anatomical identification [Label]` %in% pinarbasi_measured_assemblage[, .N, Anatomy][, Anatomy], .(ID = paste("Pinarbasi B", `Label`, sep = " "), Site = "Pinarbasi B", Anatomy = `Has anatomical identification [Label]`, `Proximal Fusion` = ifelse(!is.na(`GB (unfused)`) | !is.na(`Bp (unfused)`), "Proximal epiphysis unfused", `Has fusion character [Proximal Label]`), `Distal Fusion` = ifelse(!is.na(`Bd (unfused)`), "Distal epiphysis unfused", `Has fusion character [Distal Label]`))]
pinarbasi_full_assemblage <- pinarbasi[`Has Biological Taxonomy [Label]` %in% "Ovis" & `Context (3)` %in% "Site B" & `Has anatomical identification [Label]` %in% c(pinarbasi_measured_assemblage[, .N, Anatomy][, Anatomy], pinarbasi_additional_elements), .(ID = paste("Pinarbasi B", `Label`, sep = " "), Site = "Pinarbasi B", Anatomy = `Has anatomical identification [Label]`, `Proximal Fusion` = ifelse(!is.na(`GB (unfused)`) | !is.na(`Bp (unfused)`), "Proximal epiphysis unfused", `Has fusion character [Proximal Label]`), `Distal Fusion` = ifelse(!is.na(`Bd (unfused)`), "Distal epiphysis unfused", `Has fusion character [Distal Label]`))]

#Assign specimen numbers for the specimens that were modeled directly (measured specimens) in the modeled and full assemblages
pinarbasi_modeled_assemblage <- pinarbasi_measured_assemblage[, .(ID, Specimen_No, Element_Portion, Immature)][pinarbasi_modeled_assemblage, on = "ID"]
pinarbasi_full_assemblage <- pinarbasi_measured_assemblage[, .(ID, Specimen_No, Element_Portion, Immature)][pinarbasi_full_assemblage, on = "ID"]

#Assign the element portion numbers for specimens whose element portions were modeled
pinarbasi_full_element_key <- rbind(pinarbasi_element_key,
                                    data.table(`Anatomy Label` = c("innominate bone", "middle phalanx", "ulna"), `Element Label` = c("Pel", "PH2", "Uln")))
for(i in 1:pinarbasi_full_element_key[, .N]) {
  pinarbasi_modeled_assemblage[Anatomy %in% pinarbasi_full_element_key[i, `Anatomy Label`], Element := pinarbasi_full_element_key[i, `Element Label`]]
  pinarbasi_full_assemblage[Anatomy %in% pinarbasi_full_element_key[i, `Anatomy Label`], Element := pinarbasi_full_element_key[i, `Element Label`]]
  #Separate out proximal and distal element portions based on presence of later-fusing measurements (e.g., radius bone is proximal/distal based on presence of Bd measurement)
  if(pinarbasi_full_element_key[i, `Element Label`] %in% c("Rad", "Mtc", "Fem", "Mtt")) {
    pinarbasi_modeled_assemblage[Anatomy %in% pinarbasi_full_element_key[i, `Anatomy Label`], Element := ifelse(`Distal Fusion` %in% "" == F, paste(pinarbasi_full_element_key[i, `Element Label`], "dist", sep = "_"), paste(pinarbasi_full_element_key[i, `Element Label`], "prox", sep = "_"))]
    pinarbasi_full_assemblage[Anatomy %in% pinarbasi_full_element_key[i, `Anatomy Label`], Element := ifelse(`Distal Fusion` %in% "" == F, paste(pinarbasi_full_element_key[i, `Element Label`], "dist", sep = "_"), paste(pinarbasi_full_element_key[i, `Element Label`], "prox", sep = "_"))]
  }
  if(pinarbasi_full_element_key[i, `Element Label`] %in% c("Tib")) {
    pinarbasi_modeled_assemblage[Anatomy %in% pinarbasi_full_element_key[i, `Anatomy Label`], Element := ifelse(`Proximal Fusion` %in% "" == F, paste(pinarbasi_full_element_key[i, `Element Label`], "prox", sep = "_"), paste(pinarbasi_full_element_key[i, `Element Label`], "dist", sep = "_"))]
    pinarbasi_full_assemblage[Anatomy %in% pinarbasi_full_element_key[i, `Anatomy Label`], Element := ifelse(`Proximal Fusion` %in% "" == F, paste(pinarbasi_full_element_key[i, `Element Label`], "prox", sep = "_"), paste(pinarbasi_full_element_key[i, `Element Label`], "dist", sep = "_"))]
  }
}

#Remove unobserved element portions (Rad_prox and Mtc_prox) from modeled assemblage (we don't have direct observations of the parameters from the model)
pinarbasi_modeled_assemblage <- pinarbasi_measured_assemblage[, .N, .(Element_Portion, Element)][, .(Element_Portion, Element)][pinarbasi_modeled_assemblage, on = "Element"][!is.na(Element_Portion)]
pinarbasi_full_assemblage <- pinarbasi_measured_assemblage[, .N, .(Element_Portion, Element)][, .(Element_Portion, Element)][pinarbasi_full_assemblage, on = "Element"]

#Assign new element portion numbers for unmodeled elements (including Rad_prox and Mtc_prox)
pinarbasi_full_assemblage[Element %in% "Rad_prox", Element_Portion := 11]
pinarbasi_full_assemblage[Element %in% "Mtc_prox", Element_Portion := 12]
pinarbasi_full_assemblage[Element %in% "Pel", Element_Portion := 13]
pinarbasi_full_assemblage[Element %in% "PH2", Element_Portion := 14]
pinarbasi_full_assemblage[Element %in% "Uln", Element_Portion := 15]

#Define the Immature variable (potentially immature status based on fusion)
pinarbasi_modeled_assemblage[is.na(Immature) & Element %in% c("Sca", "Ast"), Immature := 1] #does not fuse / subject to post-fusion growth and has no relevant fusion data to exclude immature status
pinarbasi_modeled_assemblage[is.na(Immature) & Element %in% c("Hum", "Cal", "PH1"), Immature := as.numeric(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing") == F)]
pinarbasi_modeled_assemblage[is.na(Immature) & Element %in% c("Rad_prox", "Rad_dist", "Mtc_prox", "Mtc_dist", "Mtt_prox", "Mtt_dist"), Immature := as.numeric(`Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing") == F)]
pinarbasi_modeled_assemblage[is.na(Immature) & Element %in% c("Fem_prox", "Fem_dist", "Tib_prox", "Tib_dist"), Immature := as.numeric((`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing") | `Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing")) == F)]
#
pinarbasi_full_assemblage[is.na(Immature) & Element %in% c("Sca", "Ast"), Immature := 1] #does not fuse / subject to post-fusion growth and has no relevant fusion data to exclude immature status
pinarbasi_full_assemblage[is.na(Immature) & Element %in% c("Hum", "Cal", "PH1", "PH2"), Immature := as.numeric(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing") == F)]
pinarbasi_full_assemblage[is.na(Immature) & Element %in% c("Rad_prox", "Rad_dist", "Mtc_prox", "Mtc_dist", "Mtt_prox", "Mtt_dist"), Immature := as.numeric(`Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing") == F)]
pinarbasi_full_assemblage[is.na(Immature) & Element %in% c("Uln", "Pel", "Fem_prox", "Fem_dist", "Tib_prox", "Tib_dist"), Immature := as.numeric((`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing") | `Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing")) == F)]

#NW Anatolian Cattle#
#create full assemblage for fusion analysis
full_assemblage_maker <- function(original_data, biology_code, site_code, mixmod_data, element_list, full_elements, element_key) {
  full_assemblage <- original_data[`Has Biological Taxonomy [Label]` %in% biology_code & `Has anatomical identification [Label]` %in% full_elements, .(ID = paste(site_code, Label, sep = " "), Site = site_code, Taxon = `Has Biological Taxonomy [Label]`, Anatomy = `Has anatomical identification [Label]`, `Proximal Fusion` = `Has fusion character [Proximal Label]`, `Distal Fusion` = `Has fusion character [Distal Label]`)]
  #Assign specimen numbers for the specimens that were modeled directly (measured specimens) in the modeled and full assemblages
  full_assemblage <- mixmod_data[, .N, .(ID, Specimen_No, Immature)][full_assemblage, on = "ID"]
  #Assign the element portion labels for specimens that weren't modeled directly (no measurements)
  for(i in 1:element_key[, .N]) {
    full_assemblage[Anatomy %in% element_key[i, `Anatomy Label`], Element := element_key[i, `Element Label`]]
    #Separate out proximal and distal element portions based on presence of later-fusing measurements (e.g., radius bone is proximal/distal based on presence of Bd measurement)
    if(element_key[i, `Element Label`] %in% c("Rad", "Mtc", "Fem", "Mtt")) {
      full_assemblage[Anatomy %in% element_key[i, `Anatomy Label`], Element := ifelse(`Distal Fusion` %in% "" == F, paste(element_key[i, `Element Label`], "dist", sep = "_"), paste(element_key[i, `Element Label`], "prox", sep = "_"))]
    }
    if(element_key[i, `Element Label`] %in% c("Tib")) {
      full_assemblage[Anatomy %in% element_key[i, `Anatomy Label`], Element := ifelse(`Proximal Fusion` %in% "" == F, paste(element_key[i, `Element Label`], "prox", sep = "_"), paste(element_key[i, `Element Label`], "dist", sep = "_"))]
    }
  }
  #Assign Element_Portion values that match the original sets (and add new ones for unmodeled element portions)
  full_assemblage <- element_list[, .N, .(Element, Element_Portion)][full_assemblage, on = "Element"]
  full_assemblage[Element %in% "Pel", Element_Portion := 17]
  full_assemblage[Element %in% "Uln", Element_Portion := 18]
  #Get the Immature variable (potentially immature status based on fusion)
  full_assemblage[is.na(Immature) & Element %in% c("Sca", "Ast"), Immature := 1] #does not fuse / subject to post-fusion growth and has no relevant fusion data to exclude immature status
  full_assemblage[is.na(Immature) & Element %in% c("Hum", "Cal", "PH1", "PH2"), Immature := as.numeric(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing") == F)]
  full_assemblage[is.na(Immature) & Element %in% c("Rad_prox", "Rad_dist", "Mtc_prox", "Mtc_dist", "Mtt_prox", "Mtt_dist"), Immature := as.numeric(`Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing") == F)]
  full_assemblage[is.na(Immature) & Element %in% c("Uln", "Pel", "Fem_prox", "Fem_dist", "Tib_prox", "Tib_dist"), Immature := as.numeric((`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing") | `Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing")) == F)]
  #
  full_assemblage[, .(ID, Specimen_No, Site, Taxon, Anatomy, Element, Element_Portion, Immature, `Proximal Fusion`, `Distal Fusion`)]
}

nw_anatolian_additional_elements <- c("innominate bone", "ulna") #additional elements for fusion analysis

barcin_full_assemblage <- full_assemblage_maker(original_data = barcin, biology_code = c("Bos taurus Linnaeus, 1758", "Bos primigenius"), site_code = "Barcin", mixmod_data = nw_anatolian_mixmod_data[Site %in% "Barcin"], element_list = nw_anatolian_mixmod_data[, .N, .(Element, Element_Portion)], full_elements = c(modeled_elements, "middle phalanx", nw_anatolian_additional_elements, "fused metacarpal bones 3 and 4; metacarpal bone of digit 3; metacarpal bone of digit 4; metacarpal bone of digit 5", "metatarsal bone of digit 5; metatarsal bone of digit 2; fused metatarsal bones 3 and 4"), element_key = rbind(barcin_element_key, data.table(`Anatomy Label` = c("innominate bone", "ulna"), `Element Label` = c("Pel", "Uln"))))
ilipinar1_full_assemblage <- full_assemblage_maker(original_data = ilipinar[Period %in% c("X", "IX", "IX/VIII", "VIII", "VII")], biology_code = c("Bos taurus Linnaeus, 1758", "Bos", "Bos primigenius"), site_code = "Ilipinar", mixmod_data = nw_anatolian_mixmod_data[Site %in% "Ilipinar 1 (Late Neolithic/Transitional)"], element_list = nw_anatolian_mixmod_data[, .N, .(Element, Element_Portion)], full_elements = c(modeled_elements, "middle phalanx", nw_anatolian_additional_elements), element_key = rbind(ilipinar_element_key, data.table(`Anatomy Label` = c("innominate bone", "ulna"), `Element Label` = c("Pel", "Uln"))))
ilipinar2_full_assemblage <- full_assemblage_maker(original_data = ilipinar[Period %in% c("VI", "VI/VA", "VA", "VB")], biology_code = c("Bos taurus Linnaeus, 1758", "Bos", "Bos primigenius"), site_code = "Ilipinar", mixmod_data = nw_anatolian_mixmod_data[Site %in% "Ilipinar 2 (Early Chalcolithic)"], element_list = nw_anatolian_mixmod_data[, .N, .(Element, Element_Portion)], full_elements = c(modeled_elements, "middle phalanx", nw_anatolian_additional_elements), element_key = rbind(ilipinar_element_key, data.table(`Anatomy Label` = c("innominate bone", "ulna"), `Element Label` = c("Pel", "Uln"))))
mentese_full_assemblage <- full_assemblage_maker(original_data = mentese, biology_code = "Bos", site_code = "Mentese", mixmod_data = nw_anatolian_mixmod_data[Site %in% "Mentese"], element_list = nw_anatolian_mixmod_data[, .N, .(Element, Element_Portion)], full_elements = c(modeled_elements, "middle phalanx", nw_anatolian_additional_elements), element_key = rbind(mentese_element_key, data.table(`Anatomy Label` = c("innominate bone", "ulna"), `Element Label` = c("Pel", "Uln"))))

#Troubleshooting
ilipinar1_full_assemblage[, Site := "Ilipinar 1 (Late Neolithic/Transitional)"]
ilipinar2_full_assemblage[, Site := "Ilipinar 2 (Early Chalcolithic)"]
mentese_full_assemblage[Anatomy %in% "calcaneus", `Proximal Fusion` := ifelse(`Distal Fusion` %in% "Distal epiphysis unfused", "Proximal epiphysis unfused", ifelse(`Distal Fusion` %in% "Distal epiphysis fusing", "Proximal epiphysis fusing", ifelse(`Distal Fusion` %in% "Distal epiphysis fused", "Proximal epiphysis fused", ifelse(`Distal Fusion` %in% "", "", NA))))] #calcaneus fusion is listed as `Distal Fusion` but is `Proximal Fusion` in other sites/codes

#Turn the full assemblages into "fusion assemblages" of specimens with fusion data#
#Key that fits specimens into fusion stages (based on fusion timing in Grigson (1989))
bos_element_stage_key <- data.table(Fusion_Element = c("Rad_prox", "Hum_dist", "Pel", "Sca", "PH1", "PH2", "Tib_dist", "Mtc_dist", "Mtt_dist", "Cal", "Fem_prox", "Fem_dist", "Uln", "Rad_dist", "Tib_prox", "Hum_prox"),
                                    Stage = c(1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4))
#
fusion_assemblage_maker <- function(full_assemblage, element_stage_key) {
  full_assemblage[Element %in% "Rad_prox" & `Proximal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("Rad_prox", ifelse(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Hum" & `Distal Fusion` %in% "" == F & `Proximal Fusion` %in% "", c("Fusion_Element", "Fusion") := .("Hum_dist", ifelse(`Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Pel" & (`Proximal Fusion` %in% "" == F | `Distal Fusion` %in% "" == F), c("Fusion_Element", "Fusion") := .("Pel", ifelse(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing") | `Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Sca" & `Distal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("Sca", ifelse(`Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "PH1" & `Proximal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("PH1", ifelse(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "PH2" & `Proximal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("PH2", ifelse(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Tib_dist" & `Distal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("Tib_dist", ifelse(`Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Mtc_dist" & `Distal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("Mtc_dist", ifelse(`Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Mtt_dist" & `Distal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("Mtt_dist", ifelse(`Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Cal" & `Proximal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("Cal", ifelse(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Fem_prox" & `Proximal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("Fem_prox", ifelse(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Fem_dist" & `Distal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("Fem_dist", ifelse(`Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Uln" & (`Proximal Fusion` %in% "" == F | `Distal Fusion` %in% "" == F), c("Fusion_Element", "Fusion") := .("Uln", ifelse(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing") | `Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Rad_dist" & `Distal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("Rad_dist", ifelse(`Distal Fusion` %in% c("Distal epiphysis fused", "Distal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Tib_prox" & `Proximal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("Tib_prox", ifelse(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing"), "Fused", "Unfused"))]
  full_assemblage[Element %in% "Hum" & `Proximal Fusion` %in% "" == F, c("Fusion_Element", "Fusion") := .("Hum_prox", ifelse(`Proximal Fusion` %in% c("Proximal epiphysis fused", "Proximal epiphysis fusing"), "Fused", "Unfused"))]
  fusion_assemblage <- full_assemblage[, .(ID, Specimen_No, Site, Anatomy, Element, Element_Portion, Immature, `Proximal Fusion`, `Distal Fusion`, Fusion_Element, Fusion)][element_stage_key, on = "Fusion_Element"][!is.na(Fusion_Element) & !is.na(Fusion)]
  fusion_assemblage
}

#Create the fusion assemblages
barcin_fusion_assemblage <- fusion_assemblage_maker(full_assemblage = barcin_full_assemblage, element_stage_key = bos_element_stage_key)
ilipinar1_fusion_assemblage <- fusion_assemblage_maker(full_assemblage = ilipinar1_full_assemblage, element_stage_key = bos_element_stage_key)
mentese_fusion_assemblage <- fusion_assemblage_maker(full_assemblage = mentese_full_assemblage, element_stage_key = bos_element_stage_key)
ilipinar2_fusion_assemblage <- fusion_assemblage_maker(full_assemblage = ilipinar2_full_assemblage, element_stage_key = bos_element_stage_key)

####NW ANATOLIAN MODELING####
nw_anatolian_mixmod_standata <- list(
  #Sample sizes
  N_Sites = nw_anatolian_mixmod_data[, .N, Site_No][, .N],
  N_Specimens = nw_anatolian_mixmod_data[, .N, Specimen_No][, .N],
  N_Measurements = nw_anatolian_mixmod_data[, .N],
  N_Element_Portions = nw_anatolian_mixmod_data[, .N, Element_Portion][, .N],
  N_Measurement_Sets = nw_anatolian_mixmod_data[, .N, Measurement_Set][, .N],
  #Specimen observations
  Site = nw_anatolian_mixmod_data[, .N, .(Specimen_No, Site_No, Element_Portion, Immature)][order(Specimen_No), Site_No],
  Element_Portion = nw_anatolian_mixmod_data[, .N, .(Specimen_No, Site_No, Element_Portion, Immature)][order(Specimen_No), Element_Portion],
  Immature = nw_anatolian_mixmod_data[, .N, .(Specimen_No, Site_No, Element_Portion, Immature)][order(Specimen_No), Immature],
  Immature_Proportion = as.matrix(dcast(nw_anatolian_mixmod_data[, .(Immature_Proportion = mean(Immature)), .(Site_No, Element_Portion)], Site_No ~ Element_Portion, value.var = "Immature_Proportion", fill = 0))[, 2:(nw_anatolian_mixmod_data[, .N, Element_Portion][, .N] + 1)],
  #Measurement observations
  Measurement_obs = nw_anatolian_mixmod_data[, Measurement_value],
  Measurement_sd = nw_anatolian_mixmod_data[, Measurement_value * 0.01],
  Reference_obs = nw_anatolian_mixmod_data[, .N, .(Measurement_Set, Reference_value)][order(Measurement_Set), Reference_value],
  Reference_sd = nw_anatolian_mixmod_data[, .N, .(Measurement_Set, Reference_value)][order(Measurement_Set), Reference_value * 0.01],
  Measurement_Set = nw_anatolian_mixmod_data[, Measurement_Set],
  Specimen = nw_anatolian_mixmod_data[, Specimen_No],
  #Demographic observations
  N_Immature_obs = nw_anatolian_demographic_observations[, .N],
  Immature_obs_site = nw_anatolian_demographic_observations[, Site_No],
  Immature_obs = nw_anatolian_demographic_observations[, N_Unfused],
  Immature_obs_n = nw_anatolian_demographic_observations[, N_Ageable],
  N_Female_obs = nw_anatolian_demographic_observations[, .N],
  Female_obs_site = nw_anatolian_demographic_observations[, Site_No],
  Female_obs = nw_anatolian_demographic_observations[, N_Female],
  Female_obs_n = nw_anatolian_demographic_observations[, N_Sexable],
  #Prior distributions for hyper-parameters
  prior_theta_raw_1 = c(-0.5, 1.5),
  prior_theta_raw_2 = c(0, 1.5),
  prior_mu_female = c(-0.1, 0.1),
  prior_logdelta_immature = c(-3.5, 0.5),
  prior_logdelta_male = c(-2, 0.5),
  prior_logsigma_immature = c(-3.05, 0.25),
  prior_logsigma_female = c(-3.1, 0.2),
  prior_logsigma_male = c(-3.1, 0.2)
)

multisite_mixture_stanmodel <- cmdstan_model("./Scripts/LSI_mixture_model_multisite.stan")
nw_anatolian_multisite_samples <- multisite_mixture_stanmodel$sample(
  data = nw_anatolian_mixmod_standata,
  chains = 4,
  parallel_chains = 4,
  refresh = 250,
  adapt_delta = 0.99,
  max_treedepth = 15
)
#
nw_anatolian_multisite_stanfit <- rstan::read_stan_csv(nw_anatolian_multisite_samples$output_files())
nw_anatolian_post <- extract(nw_anatolian_multisite_stanfit)